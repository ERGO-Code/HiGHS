name: Wheels

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-12] #  windows-2019 ubuntu-20.04,

    steps:
      - uses: actions/checkout@v3

      - name: Install Conda environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: highsdev
          create-args: >-
            python==${{matrix.python-version}}
            pytest
            numpy
            pybind11
            cmake
            pkgconfig
            compilers
            openblas
          cache-environment: true
          init-shell: >-
            bash
            zsh

      - name: Set up Python version ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Configure CMake
        shell: bash -l {0}
        run: cmake -S . -B build -DFAST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX

      - name: Build and install
        shell: bash -l {0}
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: |
          cmake --build build --parallel
          cmake --install build

      - name: Build wheels
        shell: bash -l {0}
        run: |
          cd  $GITHUB_WORKSPACE
          export REPAIR_LIBRARY_PATH=$CONDA_PREFIX/lib
          export LD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH
          export DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH
          CC=$(which clang) CXX=$(which clang++) pip install .
          pip install cibuildwheel
          python -m cibuildwheel --output-dir wheelhouse

        # to supply options, put them in 'env', like:

        env:
          CIBW_ENVIRONMENT: REPAIR_LIBRARY_PATH=$CONDA_PREFIX/lib LD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-listdeps {wheel} &&
            DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
